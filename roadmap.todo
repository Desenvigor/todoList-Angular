Aparência geral:
    ✔ Aplicar geral.css para folha de estilos que será usada no site inteiro. @done(21-08-30 18:09)
    ✔ Limpe app.component.html @done(21-08-30 18:09)
    ✔ Visite localhost:4200 e verifique se o background já está visível @done(21-08-30 18:09)
    ✔ Incorpore os css externos no index.html @done(21-08-30 18:09)
   

Criação de Menu:
    ✔ Criar componente components/ListItem @done(21-08-30 18:10)
    ✔ Adicione componentes ao app.component.html @done(21-08-30 18:10)
    ✔ Dê estilo @done(21-08-30 18:10)

Criação de Lista de Contatos:
    ✔ Criar o componente components/InputField @done(21-08-30 18:13)
    ✔ Adicione esse componente ao app.component.html @done(21-08-30 18:13)
    ✔ Dê o estilo no css @done(21-08-30 18:13)
    ✔ Verifique se a lista de contatos aparece corretamente. @done(21-08-30 18:13)

Criação de Componente contato:
    ✔ Criar componente components/List @done(21-08-30 18:13)
    ✔ Dê o estilo no css @done(21-08-30 18:14)
    ✔ Reescrever o html do componente lista de contatos para exibir uma ou duas dezenas de app-contato @done(21-08-30 18:14)

Fazendo que os contatos sejam mais dinâmicos:
    ✔ Crie uma pasta models dentro da pastas src/app @done(21-08-30 18:14)
    ✔ Crie nessa pasta models um arquivo Activity e outro Priority (enum) @done(21-08-30 18:14)
    ✔ Faça com que essas Activities sejam exibidas. @done(21-08-30 18:15)

Fazendo com que contatos sejam levantados a partir de um servico:
    ☐ Crie um serviço services/Contato
    ☐ Declare um atributo privado contatos contendo o array de contatos que, agora, não deve mais estar na component ListaDeContatos
    ☐ Crie nesse serviço a função getContatos() que retorna a lista de contatos.
    ☐ Importe o serviço ContatoService na Componente ListaDeContatos
    ☐ Crie um atributo privado contatoService da classe ContatoService e o intancie.
    ☐ No constructor do ListaDeContatosComponent levante os contatos usando contatoService.getContato e atribua-os ao atributo contatos.
    
Criação e Exibição do componente que adiciona/cria um novo contato:
    ☐ Crie o componente components/CreateContato
    ☐ Estruture o template dele com base no https://github.com/sergiomoura/contatos-html-template/blob/main/home.html
    ☐ Estilize ele com base nos seletores #modal do arquivo https://github.com/sergiomoura/contatos-html-template/blob/main/css/home.css
    Fazendo com que o componente comece "escondido":
        ☐ Crie uma propriedade mostrandoCreateContato no componente app.component.ts e atribua a ela false
        ☐ Marque app-create-contato para que ele só seja exibido se o mostrandoCreateContato seja true (Dica: *ngIf)
    Fazendo com que ele seja exibido quando o menu seja clicado:
        ☐ No MenuComponent.ts crie uma função mostrarModalClick que seja executada toda vez que o item "Adicionar Contato" seja clicado.
        ☐ Crie um emissor de evento e faça com que ele emita um evento na função mostrarModalClick
        ☐ No app.component.html associe o evento emitido à execução de uma função mostrarModal.
           Essa função, definida no AppComponent, deve alterar o valor do atributo mostrandoCreateContato para true;
    Fazendo com que ele seja escondido quando o cancelar seja clicado:
        ☐ ... escreva aqui os passos ... análogos ao do item anterior.



